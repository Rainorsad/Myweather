apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.1"
    defaultConfig {
        applicationId "com.example.a123.myweather"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.0.1'
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:25.0.1'
    compile 'com.google.code.gson:gson:2.2.4'
    compile 'com.squareup.okhttp:okhttp:2.0.0'
    compile 'io.github.francoiscampbell:circlelayout:0.3.0'
    compile 'com.github.bumptech.glide:glide:3.5.2'
    compile files('libs/android-async-http-1.4.6.jar')
    compile 'com.jakewharton:butterknife:5.1.1'
    compile files('libs/KJFrameForAndroid_v2.245.jar')
    compile files('libs/fastjson-1.1.34.android.jar')

    //可选，用于生成application类
    provided('com.tencent.tinker:tinker-android-anno:1.7.6')
    //tinker的核心库
    compile('com.tencent.tinker:tinker-android-lib:1.7.6')
}
//apply tinker插件
apply plugin: 'com.tencent.tinker.patch'
def gitSha() {
    try {
        String gitRev = '1.0'.execute(null, project.rootDir).text.trim()
        if (gitRev == null) {
            throw new GradleException("can't get git rev, you should add git to system path or just input test value, such as 'testTinkerId'")
        }
        return gitRev
    } catch (Exception e) {
        throw new GradleException("can't get git rev, you should add git to system path or just input test value, such as 'testTinkerId'")
    }
}

